# /********************************************************************************
# * Copyright (c) 2022 Contributors to the Eclipse Foundation
# *
# * See the NOTICE file(s) distributed with this work for additional
# * information regarding copyright ownership.
# *
# * This program and the accompanying materials are made available under the
# * terms of the Apache License 2.0 which is available at
# * http://www.apache.org/licenses/LICENSE-2.0
# *
# * SPDX-License-Identifier: Apache-2.0
# ********************************************************************************/

# This is expected to be executed in the kuksa.val top-level directory

# This builds the databroker-cli

FROM rust:1.65-alpine as base
RUN rustup component add rustfmt
RUN apk add git musl-dev python3 protoc ncurses-terminfo-base

FROM base AS builder-amd64
RUN echo "AMD64 quirks"
# it seems on AMD build some dependency requires zlib headers
# also the grpc proto compilation always falls back to
# some binaries downloaded by cargo that require glibc
#RUN apk add zlib-dev libc6-compat  libstdc++ gcompat

# We need to specifiy target in build later to enable
# static linking
# See https://msfjarvis.dev/posts/building-static-rust-binaries-for-linux/
# and https://github.com/rust-lang/rust/issues/78210
ENV BUILDTARGET=x86_64-unknown-linux-musl


FROM base AS builder-arm64
RUN echo "ARM64 quirks"
# Need flag for MUSL arm builds, to prevent linker error
# on missing __getauxval symbol, see also
# https://github.com/rust-lang/rust/issues/89626
ENV CFLAGS=-mno-outline-atomics
# We need to specifiy target in build later to enable
# static linking
# See https://msfjarvis.dev/posts/building-static-rust-binaries-for-linux/
# and https://github.com/rust-lang/rust/issues/78210
ENV BUILDTARGET=aarch64-unknown-linux-musl

FROM builder-$TARGETARCH as builder
ARG TARGETARCH 

RUN echo "Building for $TARGETARCH"

# This will speed up fetching the crate.io index in the future, see
# https://blog.rust-lang.org/2022/06/22/sparse-registry-testing.html
ENV CARGO_UNSTABLE_SPARSE_REGISTRY=true



RUN mkdir /build
WORKDIR /build

# We need to add all files, because .git directory is needed to
# extract verson information during build, and we can not leave
# files out, if we do not want -dirty tags on every build
ADD . .

# See also https://github.com/rust-lang/cargo/issues/10583, 
# without this needs more than 12GB in runner if somebody wants to buildx
# it with the common qemu setup
RUN ln -s /usr/bin/git /usr/local/cargo/bin/
ENV CARGO_NET_GIT_FETCH_WITH_CLI=true

# Creating BOM
RUN cargo install cargo-license
WORKDIR /build/kuksa_databroker/createbom
RUN rm -rf ../thirdparty
RUN python3 createbom.py ../databroker-cli

WORKDIR /build/kuksa_databroker/databroker-cli

ENV RUSTFLAGS='-C link-arg=-s -C target-feature=+crt-static '
RUN cargo build  --bin databroker-cli --target $BUILDTARGET --release
RUN mv /build/target/$BUILDTARGET/release/databroker-cli /build/

FROM  scratch

COPY --from=builder /build/databroker-cli /app/databroker-cli
COPY --from=builder /build/kuksa_databroker/databroker-cli/thirdparty /app/thirdparty
COPY --from=builder /etc/terminfo /etc/terminfo

ENTRYPOINT [ "/app/databroker-cli" ]
